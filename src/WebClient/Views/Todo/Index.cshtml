@using Domain.Models.Todos
@model WebClient.Models.Todos.TodoViewModel
@{
    var pageCount = (int)Math.Ceiling((float)Model.Total / Model.PageSize);

    var queries = Context.Request.Query.ToDictionary(
        x => x.Key, 
        x => x.Value.ToString());

    queries.Remove(nameof(Model.Id));
    queries.Remove(nameof(Model.PostInputModel));
    queries.Remove(nameof(Model.CompleteInputModel));
    queries.Remove(nameof(Model.TodoDetailsViewModel));
}

@if (!string.IsNullOrWhiteSpace(Model?.ErrorMessage))
{
    <div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-octagon-fill" viewBox="0 0 16 16">
            <path d="M11.46.146A.5.5 0 0 0 11.107 0H4.893a.5.5 0 0 0-.353.146L.146 4.54A.5.5 0 0 0 0 4.893v6.214a.5.5 0 0 0 .146.353l4.394 4.394a.5.5 0 0 0 .353.146h6.214a.5.5 0 0 0 .353-.146l4.394-4.394a.5.5 0 0 0 .146-.353V4.893a.5.5 0 0 0-.146-.353L11.46.146zM8 4c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995A.905.905 0 0 1 8 4zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
        </svg>
        <div class="mx-1">@Model.ErrorMessage</div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex flex-column align-items-center mt-5">
    <div class="w-100" style="max-width: 460px">
        <h6 class="text-black-50 align-self-start">新規作成</h6>
        <div class="card shadow">
            <div class="card-body">
                <form id="todoForm" asp-action="Post" method="post">
                    @{
                        var postNewQueries = new Dictionary<string, string>(queries);
                        postNewQueries.Remove(nameof(Model.Keyword));

                        foreach (var (key, value) in postNewQueries)
                        {
                            <input type="hidden" name="@key" value="@value" />
                        }
                    }
                    <div class="d-flex flex-column">
                        <div class="form-floating mb-3">
                            <input asp-for="PostInputModel.Title" class="form-control" placeholder="TODOのタイトルを入力してください"/>
                            <label asp-for="PostInputModel.Title">タイトル</label>
                        </div>
                        
                        <div class="row g-2 mb-3">
                            <div class="col-md">
                                <div class="form-floating">
                                    <input asp-for="PostInputModel.BeginDateTime" class="form-control"/>
                                    <label asp-for="PostInputModel.BeginDateTime">開始日（オプション）</label>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="form-floating">
                                    <input asp-for="PostInputModel.DueDateTime" class="form-control"/>
                                    <label asp-for="PostInputModel.DueDateTime">期日（オプション）</label>
                                </div>
                            </div>
                        </div>

                        <div>
                            <a class="link-dark" data-bs-toggle="collapse" href="#collapseDescription" role="button" aria-expanded="false" aria-controls="collapseDescription">
                                詳細（オプション）
                            </a>
                            <div class="collapse mt-1" id="collapseDescription">
                                <div class="form-floating mb-3">
                                    <textarea asp-for="PostInputModel.Description" class="form-control" style="height: 100px" placeholder="TODOの詳細を入力してください。"></textarea>
                                    <label asp-for="PostInputModel.Description">詳細</label>
                                </div>
                            </div>
                        </div>

                        <div class="align-self-end">
                            <button type="submit" class="btn btn-dark">作成</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

<div class="w-100 mt-5" style="max-width: 600px">
    <h6 class="text-black-50 align-self-start">TODO一覧</h6>
    <div class="card shadow-sm overflow-hidden">
        <div>
            <div class="d-flex align-items-center bg-light p-3">
                <span class="text-muted me-1"><i class="bi bi-filter"></i>フィルター</span>
                <form asp-action="Index" method="get">
                    <div class="d-flex">
                        @{
                            var filterQueries = new Dictionary<string, string>(queries);
                            filterQueries.Remove(nameof(Model.IsIncompleted));
                            filterQueries.Remove(nameof(Model.IsCompleted));

                            foreach (var (key, value) in filterQueries)
                            {
                                <input type="hidden" name="@key" value="@value" />
                            }
                        }

                        <div class="form-check form-check-inline">
                            <input type="checkbox" id="statusFilterIncomplete" name="@nameof(Model.IsIncompleted)" class="form-check-input" value="true" @((Model?.IsIncompleted ?? false) ? "checked=checked" : "") onchange="submit()"/>
                            <label class="form-check-label" for="statusFilterIncomplete">未完了</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input type="checkbox" id="statusFilterComplete" name="@nameof(Model.IsCompleted)" class="form-check-input" value="true" @((Model?.IsCompleted ?? false) ? "checked=checked" : "") onchange="submit()"/>
                            <label class="form-check-label" for="statusFilterComplete">完了</label>
                        </div>
                    </div>
                </form>
            </div>
                
            @if (Model is null || !Model.Summaries.Any())
            {
                <div class="d-flex align-items-center justify-content-center p-3">TODOが見つかりません</div>
            }
            else
            {
                @foreach (var todoSummary in Model.Summaries)
                {
                    var isSummaryComplete = todoSummary.StatusString == TodoStatus.完了.ToString();

                    <div class="d-flex align-items-center justify-content-between p-3">
                        <div class="d-flex align-items-center justify-content-start">
                            <form id="completeTodoForm_@todoSummary.Id" asp-action="ChangeStatus" method="post">
                                @foreach (var (key, value) in queries)
                                {
                                    <input type="hidden" name="@key" value="@value" />
                                }
                                <input type="hidden" asp-for="CompleteInputModel.TodoId" value="@todoSummary.Id"/>

                                <input type="checkbox" asp-for="CompleteInputModel.IsComplete" checked="@isSummaryComplete" data-form="completeTodoForm_@todoSummary.Id" onchange="submit()"/>
                            </form>

                            <div class="d-flex ms-3">
                                @{
                                    var detailsQueries = new Dictionary<string, string>(queries);
                                    if (detailsQueries.ContainsKey(nameof(Model.Id)))
                                    {
                                        detailsQueries[nameof(Model.Id)] = todoSummary.Id;
                                    }
                                    else
                                    {
                                        detailsQueries.Add(nameof(Model.Id), todoSummary.Id);
                                    }
                                }
                                <div style="width: 200px;">
                                    <a asp-action="Index" asp-all-route-data="@detailsQueries" class="link-dark text-decoration-none">@todoSummary.Title</a>
                                </div>
                                @if (todoSummary.BeginDateTime is null && todoSummary.DueDateTime is null)
                                {
                                    <div style="width: 210px; text-align: center;">-</div>
                                }
                                else
                                {
                                    <div style="width: 210px;">
                                        <div class="row g-2">
                                            <div class="col-auto" style="min-width: 90px;text-align: right">@(todoSummary.BeginDateTime?.ToString("yyyy/MM/dd") ?? "-")</div>
                                            <div class="col-auto"><i class="bi bi-arrow-right"></i></div>
                                            <div class="col-auto" style="min-width: 90px;text-align: left">@(todoSummary.DueDateTime?.ToString("yyyy/MM/dd") ?? "-")</div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <form asp-action="Delete" method="post">
                            @foreach (var (key, value) in queries)
                            {
                                <input type="hidden" name="@key" value="@value" />
                            }
                            <input type="hidden" asp-for="Id" value="@todoSummary.Id"/>

                            <span class="text-secondary" data-bs-toggle="modal" data-bs-target="#deleteModal"><i class="bi bi-trash-fill"></i></span>

                            <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="deleteModalLabel">TODO削除</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            選択したTODOを削除しますか？
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">閉じる</button>
                                            <button type="submit" class="btn btn-primary">削除</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                }

                <div class="d-flex justify-content-center align-items-center bg-light p-3">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination" style="margin-bottom: 0;">
                            @{
                                var pagenationQueries = new Dictionary<string, string>(queries);

                                var prevPageNum = Model.PageNum - 1;
                                if (pagenationQueries.ContainsKey("PageNum"))
                                {
                                    pagenationQueries["PageNum"] = prevPageNum.ToString();
                                }
                            }
                            <li class="page-item @(prevPageNum < 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-all-route-data="pagenationQueries" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            @for (var i = 1; i <= pageCount; i++)
                            {
                                if (!pagenationQueries.ContainsKey("PageNum"))
                                {
                                    continue;
                                }
                                pagenationQueries["PageNum"] = i.ToString();

                                <li class="page-item @(i == Model.PageNum ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-all-route-data="pagenationQueries">@i</a>
                                </li>
                            }
                            @{
                                var nextPageNum = Model.PageNum + 1;
                                if (pagenationQueries.ContainsKey("PageNum"))
                                {
                                    pagenationQueries["PageNum"] = nextPageNum.ToString();
                                }
                            }
                            <li class="page-item @(nextPageNum > pageCount ? "disabled": "")">
                                <a class="page-link" asp-action="Index" asp-all-route-data="pagenationQueries" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>
</div>

    
@if (Model?.ShowDetails ?? false)
{
    <div class="offcanvas offcanvas-end show" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
        <form asp-action="Post" method="post">
            <input type="hidden" asp-for="Id" value="@Model.TodoDetailsViewModel.Id" />

            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasExampleLabel">TODO詳細</h5>
                <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <div class="form-floating">
                    <input asp-for="PostInputModel.Title" class="form-control" placeholder="TODOのタイトルを入力してください" value="@Model.TodoDetailsViewModel.Title"/>
                    <label>タイトル</label>
                </div>
                
                <div class="row g-2 mt-3">
                    <div class="col-md">
                        <div class="form-floating">
                            <input asp-for="PostInputModel.BeginDateTime" class="form-control" value="@Model.TodoDetailsViewModel.BeginDateTime?.ToString("s")"/>
                            <label asp-for="PostInputModel.BeginDateTime">開始日（オプション）</label>
                        </div>
                    </div>
                    <div class="col-md">
                        <div class="form-floating">
                            <input asp-for="PostInputModel.DueDateTime" class="form-control" value="@Model.TodoDetailsViewModel.DueDateTime?.ToString("s")"/>
                            <label asp-for="PostInputModel.DueDateTime">期日（オプション）</label>
                        </div>
                    </div>
                </div>

                <div class="form-floating mt-3">
                    <textarea name="PostInputModel.Description" class="form-control" style="height: 100px" placeholder="TODOの詳細を入力してください。">@Model.TodoDetailsViewModel.Description</textarea>
                    <label>詳細</label>
                </div>

                <div class="form-check mt-3">
                    @if (Model.TodoDetailsViewModel.Status == (int)TodoStatus.完了)
                    {
                        <input asp-for="PostInputModel.IsComplete" class="form-check-input" type="checkbox" value="true" id="flexCheckChecked" checked="checked"/>
                    }
                    else
                    {
                        <input asp-for="PostInputModel.IsComplete" class="form-check-input" type="checkbox" value="true" id="flexCheckChecked" />
                    }
                    <label class="form-check-label" for="flexCheckChecked">完了</label>
                </div>

                <div class="d-flex justify-content-between align-items-center  mt-3">
                    <button type="button" class="btn btn-outline-dark" data-bs-dismiss="offcanvas" aria-label="Close">キャンセル</button>
                    <button type="submit" class="btn btn-dark">更新</button>
                </div>
            </div>
        </form>
    </div>
}

</div>